//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dashboard
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DatabaseDBEntities : DbContext
    {
        public DatabaseDBEntities()
            : base("name=DatabaseDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Calculation> Calculations { get; set; }
        public virtual DbSet<ChartEntity> ChartEntities { get; set; }
        public virtual DbSet<CodeNamespace> CodeNamespaces { get; set; }
        public virtual DbSet<CodeValue> CodeValues { get; set; }
        public virtual DbSet<Report> Reports { get; set; }
        public virtual DbSet<ReportType> ReportTypes { get; set; }
        public virtual DbSet<RevenueTrackerData> RevenueTrackerDatas { get; set; }
        public virtual DbSet<SerieEntity> SerieEntities { get; set; }
    
        public virtual ObjectResult<usp_Generate_Metrics_PEPM_Result> usp_Generate_Metrics_PEPM(Nullable<int> year, Nullable<int> lower, Nullable<int> upper, Nullable<int> report)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var lowerParameter = lower.HasValue ?
                new ObjectParameter("lower", lower) :
                new ObjectParameter("lower", typeof(int));
    
            var upperParameter = upper.HasValue ?
                new ObjectParameter("upper", upper) :
                new ObjectParameter("upper", typeof(int));
    
            var reportParameter = report.HasValue ?
                new ObjectParameter("report", report) :
                new ObjectParameter("report", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Generate_Metrics_PEPM_Result>("usp_Generate_Metrics_PEPM", yearParameter, lowerParameter, upperParameter, reportParameter);
        }
    
        public virtual ObjectResult<Alpha_Result> Alpha(Nullable<int> year, Nullable<int> lower, Nullable<int> upper, Nullable<int> report)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var lowerParameter = lower.HasValue ?
                new ObjectParameter("lower", lower) :
                new ObjectParameter("lower", typeof(int));
    
            var upperParameter = upper.HasValue ?
                new ObjectParameter("upper", upper) :
                new ObjectParameter("upper", typeof(int));
    
            var reportParameter = report.HasValue ?
                new ObjectParameter("report", report) :
                new ObjectParameter("report", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Alpha_Result>("Alpha", yearParameter, lowerParameter, upperParameter, reportParameter);
        }
    }
}
